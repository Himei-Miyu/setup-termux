#!/data/data/com.termux/files/usr/bin/bash

#
# กำหนดตัวแปรเริ่มต้น
# ต้องกำหนดเพื่อให้คำสั่งอื่นสามารถใช้งานได้
#
HMC::initializeVariables()
{
	declare -ga _HMC_colors;
	_HMC_colors[0]="$(printf "\e[0m")";    # [ RESET ]
	_HMC_colors[1]="$(printf "\e[34m")";   # [ DARK BLUE ]
	_HMC_colors[2]="$(printf "\e[32m")";   # [ DARK GREEN ]
	_HMC_colors[3]="$(printf "\e[36m")";   # [ DARK AQUA ]
	_HMC_colors[4]="$(printf "\e[31m")";   # [ DARK RED ]
	_HMC_colors[5]="$(printf "\e[35m")";   # [ DARK PURPLE ]
	_HMC_colors[6]="$(printf "\e[33m")";   # [ GOLD ]
	_HMC_colors[7]="$(printf "\e[37m")";   # [ GRAY ]
	_HMC_colors[8]="$(printf "\e[90m")";   # [ DARK GRAY ]
	_HMC_colors[9]="$(printf "\e[94m")";   # [ BLUE ]
	_HMC_colors[10]="$(printf "\e[30m")";  # [ BLACK ]
	_HMC_colors[11]="$(printf "\e[92m")";  # [ GREEN ]
	_HMC_colors[12]="$(printf "\e[94m")";  # [ AQUA ]
	_HMC_colors[13]="$(printf "\e[91m")";  # [ LIGHT RED ]
	_HMC_colors[14]="$(printf "\e[95m")";  # [ PINK ]
	_HMC_colors[15]="$(printf "\e[93m")";  # [ YELLOW ]
	_HMC_colors[16]="$(printf "\e[97m")";  # [ WHITE ]
	_HMC_colors[17]="$(printf "\e[1m")";   # [ BOLD TEXT ]
	_HMC_colors[18]="$(printf "\e[2m")";   # [ FAINT TEXT ]
	_HMC_colors[19]="$(printf "\e[3m")";   # [ ITALIC TEXT ]
	_HMC_colors[20]="$(printf "\e[4m")";   # [ UNDERLINE TEXT ]
	_HMC_colors[21]="$(printf "\e[7m")";   # [ REVERSE _HMC_colors ]
	_HMC_colors[22]="$(printf "\e[9m")";   # [ STRIKETHROUGH TEXT ]
}
# 
# @descriptions เปลี่ยนข้อความให้มีสี
# @params string			- รับชื่อตัวแปรด้านนอก
# @params string | array	- รับข้อความที่ยังไม่ได้เปลี่ยนแปลงสี
# @returns string | array	- ส่งค่าไปให้ตัวแปรด้านนอกตามชื่อที่ส่งเข้ามา
#
HMC::replaceColorText()
{
	local output=$1;
	local raw_text=($2);
	local -a text;
	for i in ${!raw_text[@]}; do
		text+=($(sed -r "\
		s/§r/${_HMC_colors[0]}/g; \
		s/§1/${_HMC_colors[1]}/g; \
		s/§2/${_HMC_colors[2]}/g; \
		s/§3/${_HMC_colors[3]}/g; \
		s/§4/${_HMC_colors[4]}/g; \
		s/§5/${_HMC_colors[5]}/g; \
		s/§6/${_HMC_colors[6]}/g; \
		s/§7/${_HMC_colors[7]}/g; \
		s/§8/${_HMC_colors[8]}/g; \
		s/§9/${_HMC_colors[9]}/g; \
		s/§0/${_HMC_colors[10]}/g; \
		s/§a/${_HMC_colors[11]}/g; \
		s/§b/${_HMC_colors[12]}/g; \
		s/§c/${_HMC_colors[13]}/g; \
		s/§d/${_HMC_colors[14]}/g; \
		s/§e/${_HMC_colors[15]}/g; \
		s/§f/${_HMC_colors[16]}/g; \
		s/§l/${_HMC_colors[17]}/g; \
		s/§t/${_HMC_colors[18]}/g; \
		s/§o/${_HMC_colors[19]}/g; \
		s/§n/${_HMC_colors[20]}/g; \
		s/§y/${_HMC_colors[21]}/g; \
		s/§m/${_HMC_colors[22]}/g; \
		" <<< ${raw_text[$i]}));
	done
	[[ ${#raw_text[@]} -eq 1 ]] && eval $output="${text[0]}" || eval $output="(${text[@]})";
}
#
# @params string
# @returns string
#
HMC::colorText()
{
	local raw_text="$1";
	local text;
	HMC::replaceColorText "text" $raw_text;
	echo -e "$text";
}
#
# แสดงข้อความปกติทั่วไป
#
#
HMC::logMessage()
{
	local raw_text="§l§f[§dH§5M§eC§f]§r§8:§a $@§r";
	HMC::colorText $raw_text;
}
#
# แสดงข้อความเตือนเมื่อมีปัญหาแต่ไม่ร้ายแรง
#
#
HMC::logWarn()
{
	local raw_text="§l§f[§dH§5M§eC§f]§r§8:§e $@§r";
	HMC::colorText $raw_text;
}
#
# แสดงข้อความผิดพลาดเมื่อล้มเหลวการทำงาน
# พร้อมส่งออก และคืนค่าสถานะ 1
#
HMC::logError()
{
	local raw_text="§l§f[§dH§5M§eC§f]§r§8:§c $@§r";
	HMC::colorText $raw_text;
	exit 1;
}
#
# อัพเดทแพ็คเกจ
# และอัพเกรดแพคเกจ
#
HMC::update()
{
	apt-get update || return $?;
	apt-get -y -o Dpkg::Options::=--force-confdef upgrade || return $?;
}
#
# ปรับแต่ง cursor
#
#
HMC::cursor()
{
	case "$1" in
		"get")
			IFS=';' read -sdR -p $'\e[6n' ROW COL;
			[[ $2 == "row" ]] && echo "${ROW#*[}";
			[[ $2 == "col" ]] && echo "${COW#*[}";
			break;;
		"show")
			[[ "$2" == "enable" ]] && printf "\e[?25h";
			[[ "$2" == "disable" ]] && printf "\e[?25l";
			break;;
		"moveto")
			printf "\e[$2;${3:-1}H";
			break;;
		*) break;;
	esac
}
#
# รับ input จากแป้นพิมพ์
#
#
HMC::getKeyInput()
{
	local key;
	IFS='' read -rsn1 key;
	[[ -z "$key" ]] && echo enter;
	[[ $key == " " ]] && echo space;
	read -rsn2 key;
	[[ "$key" == "[A" ]] && echo up;
	[[ "$key" == "[B" ]] && echo down;
	[[ "$key" == "[C" ]] && echo right;
	[[ "$key" == "[D" ]] && echo left;
}
#
# เมนูสลับค่า จริง-เท็จ
# ใช้คู่กับ function HMC::installs
#
HMC::toggleOption()
{	
	local output=$1;
	eval local is_selected=("\${${output}[@]}");
	local order_selecting=$2;
	[[ "${is_selected[$order_selecting]}" == "true" ]] && is_selected[$order_selecting]="false" || is_selected[$order_selecting]="true";
	eval $output='("${is_selected[@]}")';
}
#
# ลูกศรเลือกรายการติดตั้งแพคเกจ
#
#
HMC::installs()
{
	local output="$1";
	local label_text_list="$2";
	local -a label_list;

	IFS=';' read -r -a label_list <<< "$label_text_list";
	
	local -a is_selected_list;
	local is_selected_list_default=($3);
	local order_selecting=0;
	local selected_text=`HMC::replaceColorText selected_text §a§l✔§r`;
	local color_list=(`HMC::replaceColorText color_list §l §r`);
	
	for i in ${!label_list[@]}; do
		is_selected_list+=("${is_selected_list_default[$i]:-false}");
		printf "\n";
	done

	local end_row=`HMC::cursor get row`;
	local start_row=$(( $end_row - ${#label_list[@]} ));
	
	HMC::cursor "show" "disable";

	trap "HMC::cursor 'show' 'enable';echo \"installing has canceled\"; break" SIGINT;

	while true; do

		local index=0;

		for i in ${!label_list[@]}; do

			local prefix=" ";

			[[ ${is_selected_list[$index]} == "true" ]] && prefix="$selected_text";

			HMC::cursor "moveto" $(( $start_row + $index ));

			[[ $index -eq $order_selecting ]] && echo "$prefix  ${color_list[0]}${label_list[$i]}${color_list[1]}" || echo "$prefix ${label_list[$i]} ";

			(( index++ ));
		done
		case `HMC::keyInput` in
			enter) break;;
			space) HMC::toggleOption "output" $order_selecting;;
			up) (( order_selecting-- )); [[ $order_selecting -lt 0 ]] && order_selecting=$(( ${#label_list[@]} - 1 ));;
			down) (( order_selecting++ )); [[ $order_selecting -ge ${#label_list[@]} ]] && order_selecting=0;;
			right) HMC::toggleOption "output" $order_selecting;;
			left) HMC::toggleOption "output" $order_selecting;;
		esac
	done

	HMC::cursor "show" "enable";

	eval $output="(${output[@]})";
}
HMC::menu()
{
	local label_list=(
		"§t§3Install everything§r"
		"§tTermux Utilities§r"
		"§tUbuntu 22.04 LTS§r"
		"§t§aMongoDB CLI \& §eServer§r"
		"§t§aMongoDB §eServer§r"
		"§tSSH §eServer§r"
		"§t§3VSCode §eServer§r"
		"§tCustom Install Packages§r"
	)
	HMC::replaceColorText "label_list" ${label_list[@]}
	local menu;
	local label_text;
	local is_selected_list_text_default="true false"
	for i in ${!label_list[@]}; do
		label_text+="${label_list[$i]};";
	done
	HMC::installs "menu" "$label_text" "$is_selected_list_text_default";
	echo "HMC > ${menu[@]}"
}
#
#
#
#
HMC::initial()
{
	HMC::initializeVariables;
	mkdir -p $HOME/.HMC && cd $HOME/.HMC;
	touch errors.log installs.log
	cd;
}
HMC::initial

HMC::ram()
{
	local rawDatas=($(free | grep Mem))
	rawDatas=(${rawDatas[@]:1:3})
	for data in ${rawDatas[@]}; do
		[[ $data -ge 1000000 ]] && echo "${data}"
	done
}
